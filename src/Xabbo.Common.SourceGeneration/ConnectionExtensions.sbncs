using System.Threading.Tasks;

using Xabbo.Messages;
using Xabbo.Connection;

namespace Xabbo;

{{~
    func gtypes; ret array.join $[0] ', ' @(do(x); ret 'T'+x; end); end
    func gargs; ret array.join $[0] ', ' @(do(x); ret 'T'+x+' arg'+x; end); end
-}}

public static partial class ConnectionExtensions
{
    #region Generic Send
    {{~ for n in 1..max_params ~}}
    /// <summary>
    /// Sends a packet with the specified identifier and values to the client or server, depending on the identifier's direction.
    /// </summary>
    public static void Send<{{gtypes 1..n}}>(this IConnection connection, Identifier identifier, {{gargs 1..n}})
    {
        using Packet packet = new Packet(connection.Messages.Resolve(identifier));
        {{~ for i in 1..n ~}}
        packet.Write<T{{i}}>(arg{{i}});
        {{~ end ~}}
        connection.Send(packet);
    }

    /// <summary>
    /// Sends a packet with the specified header and values to the client or server, depending on the header's direction.
    /// </summary>
    public static void Send<{{gtypes 1..n}}>(this IConnection connection, Header header, {{gargs 1..n}})
    {
        using Packet packet = new Packet(header);
        {{~ for i in 1..n ~}}
        packet.Write<T{{i}}>(arg{{i}});
        {{~ end ~}}
        connection.Send(packet);
    }
    {{~ end ~}}
    #endregion
}